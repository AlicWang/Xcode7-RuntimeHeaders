//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//


@interface BKAccelerometerClient : BKGSEventClient
{
    _Bool _wantsAccelerometerEvents;
    _Bool _passiveOrientationEvents;
    _Bool _wantsOrientationEvents;
    float _xThreshold;
    float _yThreshold;
    float _zThreshold;
    double _accelerometerUpdateInterval;
    double _lastAccelerometerEventTimestamp;
}

@property(nonatomic, getter=_lastAccelerometerEventTimestamp, setter=_setLastAccelerometerEventTimestamp:) double lastAccelerometerEventTimestamp; // @synthesize lastAccelerometerEventTimestamp=_lastAccelerometerEventTimestamp;
@property(nonatomic) _Bool wantsOrientationEvents; // @synthesize wantsOrientationEvents=_wantsOrientationEvents;
@property(nonatomic) _Bool passiveOrientationEvents; // @synthesize passiveOrientationEvents=_passiveOrientationEvents;
@property(nonatomic) float zThreshold; // @synthesize zThreshold=_zThreshold;
@property(nonatomic) float yThreshold; // @synthesize yThreshold=_yThreshold;
@property(nonatomic) float xThreshold; // @synthesize xThreshold=_xThreshold;
@property(nonatomic) double accelerometerUpdateInterval; // @synthesize accelerometerUpdateInterval=_accelerometerUpdateInterval;
@property(nonatomic) _Bool wantsAccelerometerEvents; // @synthesize wantsAccelerometerEvents=_wantsAccelerometerEvents;
- (id)descriptionBuilder;
- (_Bool)_shouldSendSampleEventWithTimestamp:(double)arg1 samplingInterval:(double)arg2;
- (_Bool)_passesThresholdForX:(float)arg1 y:(float)arg2 z:(float)arg3;
- (void)handleOrientationEvent:(int)arg1 orientationLocked:(_Bool)arg2;
- (void)handleAccelerometerEventWithTimestamp:(double)arg1 x:(float)arg2 y:(float)arg3 z:(float)arg4 samplingInterval:(double)arg5;
- (void)dealloc;
- (id)description;

@end