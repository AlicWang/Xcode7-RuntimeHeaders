//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//


@interface FRExploreTableViewController : UIViewController <FRTagImageCacheObserving, FRSubscriptionLimitExceededDelegate, FRStackViewControllerAnimatorContext, FRAppActivityBackgroundForegroundObserving, FRRecommendationControllerObserving, FRFeedBasedDataSourceDelegate, UICollectionViewDelegate, FRReusableCellVisibilityMonitorObserving, FCAppConfigurationObserving, UIViewControllerPreviewingDelegate, FRStoryboardRestorableViewController, FROfflineModeSupport, UITableViewDataSource, UITableViewDelegate>
{
    _Bool _inOfflineMode;
    _Bool _isSuppressingColorSettings;
    _Bool _dataLoaded;
    _Bool _viewControllerIsVisible;
    long long _offlineReason;
    UIScrollView *_scrollView;
    UIPageControl *_channelsPageControl;
    UIPageControl *_topicsPageControl;
    UITableView *_browseTableViewLeft;
    UITableView *_browseTableViewRight;
    UIView *_browseTableMiddleLine;
    id <UIViewControllerPreviewing> _leftTableViewPreviewing;
    id <UIViewControllerPreviewing> _rightTableViewPreviewing;
    id <UIViewControllerPreviewing> _suggestedTopicPreviewing;
    id <UIViewControllerPreviewing> _suggestedChannelPreviewing;
    UIView *_channelHeader;
    UIView *_topicHeader;
    UIView *_browseHeader;
    UIView *_browseHeader2;
    id <FRFeldsparContext> _feldsparContext;
    FRFeedBasedDataSource *_suggestedChannelsDataSource;
    FRFeedBasedDataSource *_suggestedTopicsDataSource;
    FCStreamingResults *_pendingSuggestedChannels;
    FCStreamingResults *_pendingSuggestedTopics;
    FRExploreCollectionView *_suggestedChannelsCollectionView;
    FRExploreCollectionView *_suggestedTopicsCollectionView;
    FRCollectionViewPagedLayout *_suggestedChannelsCollectionViewLayout;
    FRCollectionViewPagedLayout *_suggestedTopicsCollectionViewLayout;
    NSArray *_recommendedCategories;
    FRCollectionViewCellVisibilityMonitor *_suggestedChannelsCollectionViewCellVisibilityMonitor;
    FRCollectionViewCellVisibilityMonitor *_suggestedTopicsCollectionViewCellVisibilityMonitor;
    FCStreamingResults *_stagedRecommendedChannelResults;
    FCStreamingResults *_stagedRecommendedTopicResults;
    id <UIViewControllerAnimatedTransitioning> _animatorForNextTransition;
    NSMapTable *_topicCompletionLookup;
    NSString *_lastSeenContentSizeCategory;
    NSDate *_viewAppearDate;
    NSUUID *_viewAppearUUID;
    struct CGSize _channelsGridSize;
    struct CGSize _topicsGridSize;
    struct CGRect _selectedCellRect;
}

+ (id)storyboardIdentifier;
+ (id)exploreTableViewControllerWithFeldsparContext:(id)arg1 andStoryboard:(id)arg2;
@property(nonatomic) _Bool viewControllerIsVisible; // @synthesize viewControllerIsVisible=_viewControllerIsVisible;
@property(nonatomic) struct CGRect selectedCellRect; // @synthesize selectedCellRect=_selectedCellRect;
@property(copy, nonatomic) NSUUID *viewAppearUUID; // @synthesize viewAppearUUID=_viewAppearUUID;
@property(retain, nonatomic) NSDate *viewAppearDate; // @synthesize viewAppearDate=_viewAppearDate;
@property(copy, nonatomic) NSString *lastSeenContentSizeCategory; // @synthesize lastSeenContentSizeCategory=_lastSeenContentSizeCategory;
@property(retain, nonatomic) NSMapTable *topicCompletionLookup; // @synthesize topicCompletionLookup=_topicCompletionLookup;
@property(retain, nonatomic) id <UIViewControllerAnimatedTransitioning> animatorForNextTransition; // @synthesize animatorForNextTransition=_animatorForNextTransition;
@property(retain, nonatomic) FCStreamingResults *stagedRecommendedTopicResults; // @synthesize stagedRecommendedTopicResults=_stagedRecommendedTopicResults;
@property(retain, nonatomic) FCStreamingResults *stagedRecommendedChannelResults; // @synthesize stagedRecommendedChannelResults=_stagedRecommendedChannelResults;
@property(retain, nonatomic) FRCollectionViewCellVisibilityMonitor *suggestedTopicsCollectionViewCellVisibilityMonitor; // @synthesize suggestedTopicsCollectionViewCellVisibilityMonitor=_suggestedTopicsCollectionViewCellVisibilityMonitor;
@property(retain, nonatomic) FRCollectionViewCellVisibilityMonitor *suggestedChannelsCollectionViewCellVisibilityMonitor; // @synthesize suggestedChannelsCollectionViewCellVisibilityMonitor=_suggestedChannelsCollectionViewCellVisibilityMonitor;
@property(retain, nonatomic) NSArray *recommendedCategories; // @synthesize recommendedCategories=_recommendedCategories;
@property(retain, nonatomic) FRCollectionViewPagedLayout *suggestedTopicsCollectionViewLayout; // @synthesize suggestedTopicsCollectionViewLayout=_suggestedTopicsCollectionViewLayout;
@property(retain, nonatomic) FRCollectionViewPagedLayout *suggestedChannelsCollectionViewLayout; // @synthesize suggestedChannelsCollectionViewLayout=_suggestedChannelsCollectionViewLayout;
@property(retain, nonatomic) FRExploreCollectionView *suggestedTopicsCollectionView; // @synthesize suggestedTopicsCollectionView=_suggestedTopicsCollectionView;
@property(retain, nonatomic) FRExploreCollectionView *suggestedChannelsCollectionView; // @synthesize suggestedChannelsCollectionView=_suggestedChannelsCollectionView;
@property(nonatomic) _Bool dataLoaded; // @synthesize dataLoaded=_dataLoaded;
@property(retain, nonatomic) FCStreamingResults *pendingSuggestedTopics; // @synthesize pendingSuggestedTopics=_pendingSuggestedTopics;
@property(retain, nonatomic) FCStreamingResults *pendingSuggestedChannels; // @synthesize pendingSuggestedChannels=_pendingSuggestedChannels;
@property(retain, nonatomic) FRFeedBasedDataSource *suggestedTopicsDataSource; // @synthesize suggestedTopicsDataSource=_suggestedTopicsDataSource;
@property(retain, nonatomic) FRFeedBasedDataSource *suggestedChannelsDataSource; // @synthesize suggestedChannelsDataSource=_suggestedChannelsDataSource;
@property(retain, nonatomic) id <FRFeldsparContext> feldsparContext; // @synthesize feldsparContext=_feldsparContext;
@property(retain, nonatomic) UIView *browseHeader2; // @synthesize browseHeader2=_browseHeader2;
@property(retain, nonatomic) UIView *browseHeader; // @synthesize browseHeader=_browseHeader;
@property(retain, nonatomic) UIView *topicHeader; // @synthesize topicHeader=_topicHeader;
@property(retain, nonatomic) UIView *channelHeader; // @synthesize channelHeader=_channelHeader;
@property(nonatomic) struct CGSize topicsGridSize; // @synthesize topicsGridSize=_topicsGridSize;
@property(nonatomic) struct CGSize channelsGridSize; // @synthesize channelsGridSize=_channelsGridSize;
@property(retain, nonatomic) id <UIViewControllerPreviewing> suggestedChannelPreviewing; // @synthesize suggestedChannelPreviewing=_suggestedChannelPreviewing;
@property(retain, nonatomic) id <UIViewControllerPreviewing> suggestedTopicPreviewing; // @synthesize suggestedTopicPreviewing=_suggestedTopicPreviewing;
@property(retain, nonatomic) id <UIViewControllerPreviewing> rightTableViewPreviewing; // @synthesize rightTableViewPreviewing=_rightTableViewPreviewing;
@property(retain, nonatomic) id <UIViewControllerPreviewing> leftTableViewPreviewing; // @synthesize leftTableViewPreviewing=_leftTableViewPreviewing;
@property(retain, nonatomic) UIView *browseTableMiddleLine; // @synthesize browseTableMiddleLine=_browseTableMiddleLine;
@property(retain, nonatomic) UITableView *browseTableViewRight; // @synthesize browseTableViewRight=_browseTableViewRight;
@property(retain, nonatomic) UITableView *browseTableViewLeft; // @synthesize browseTableViewLeft=_browseTableViewLeft;
@property(retain, nonatomic) UIPageControl *topicsPageControl; // @synthesize topicsPageControl=_topicsPageControl;
@property(retain, nonatomic) UIPageControl *channelsPageControl; // @synthesize channelsPageControl=_channelsPageControl;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) _Bool isSuppressingColorSettings; // @synthesize isSuppressingColorSettings=_isSuppressingColorSettings;
@property(nonatomic) long long offlineReason; // @synthesize offlineReason=_offlineReason;
@property(nonatomic, getter=isInOfflineMode) _Bool inOfflineMode; // @synthesize inOfflineMode=_inOfflineMode;
- (void).cxx_destruct;
- (_Bool)isLandscape;
- (_Bool)isPad;
- (_Bool)isCompactWidth;
- (void)updatePageControl;
- (void)_endSuppressingColorSettingsUpdate;
- (void)_beginSuppressingColorSettingsUpdate;
- (void)exceededMaximumAllowedSubscription;
- (void)recommendedTopicsDidUpdate:(id)arg1;
- (void)recommendedChannelsDidUpdate:(id)arg1;
- (void)recommendedEngineDidUpdate:(id)arg1;
- (void)appConfigurationDidChange:(id)arg1;
- (void)didDismissPreviewViewController:(id)arg1 committing:(_Bool)arg2;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint)arg2;
- (id)_tableViewForPosition:(struct CGPoint)arg1 inView:(id)arg2;
- (id)_tableViewCellForPosition:(struct CGPoint)arg1 inView:(id)arg2;
- (id)_collectionViewCellForPosition:(struct CGPoint)arg1 inView:(id)arg2;
- (id)_collectionViewForPosition:(struct CGPoint)arg1 inView:(id)arg2;
- (id)_viewForPosition:(struct CGPoint)arg1 ofClass:(Class)arg2 inView:(id)arg3;
- (id)_viewControllerForTableView:(id)arg1 indexPath:(id)arg2;
- (void)notifyWhenAvailabilityInOfflineModeHasBeenDeterminedUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)canProvideAvailabilityInOfflineModeSynchronously;
- (_Bool)isAvailableInOfflineMode;
- (id)sectionHeaderViewWithTitle:(id)arg1 separator:(_Bool)arg2 rightTitle:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)preloadImagesForTags:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)tagImageCache:(id)arg1 didFetchImages:(id)arg2 forTag:(id)arg3;
- (id)_dataSourceForTableView:(id)arg1;
- (id)_collectionViewForDataSource:(id)arg1;
- (long long)_feedPickerViewSectionForCollectionView:(id)arg1;
- (id)_dataSourceForCollectionView:(id)arg1;
- (void)feedDataSource:(id)arg1 toggleSubscription:(id)arg2 subscriptionButton:(id)arg3;
- (void)feedDataSourceDidReloadData:(id)arg1;
- (void)feedDataSource:(id)arg1 wantsToPerformUpdate:(CDUnknownBlockType)arg2;
- (void)onPageControl:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)animatorForDismissingViewController:(id)arg1;
- (id)animatorForPresentingViewController:(id)arg1;
- (void)reusableCellVisibilityMonitor:(id)arg1 cellDidBecomeInvisible:(id)arg2 visibilityStartDate:(id)arg3 indexPath:(id)arg4;
- (struct CGRect)suggestedTopicsCollectionViewFrame;
- (struct CGRect)suggestedChannelsCollectionViewFrame;
- (void)didBecomeNotVisible;
- (void)didBecomeVisible;
- (_Bool)isViewVisible;
- (void)activityBackgroundForegroundObservingApplicationDidEnterBackground:(CDUnknownBlockType)arg1;
- (void)activityBackgroundForegroundObservingApplicationDidBecomeActive;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (double)pageControlHeight;
- (double)sectionHeaderHeight;
- (double)browseSectionHeight;
- (double)gridSectionHeight;
- (void)reloadData;
- (void)startReloadPendingData;
- (void)startReload;
- (void)updateLayout;
- (void)updateScrollView;
- (void)viewDidLoad;
- (void)setupDataSource;
- (void)setupWithFeldsparContext:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (_Bool)_exploreTabIsSelected;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) long long fr_stackViewControllerPresentationStyle;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end