//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//


@interface FRTFeedDataStorage : NSObject
{
    _Bool _inMemoryDatabase;
    _Bool _childStorage;
    NSString *_identifier;
    FRTFeedDataStorageHeadlineInput *_input;
    NSURL *_layoutCacheDBPath;
    FMDatabase *_database;
    NSObject<OS_dispatch_queue> *_serialDBWritingQueue;
}

+ (id)storageForIdentifier:(id)arg1 inMemory:(_Bool)arg2 error:(id *)arg3;
+ (void)pruneOldFeedCacheFiles;
+ (void)clearEntireLayoutStorageDirectory;
+ (_Bool)_destroyDBFile:(id)arg1 error:(id *)arg2;
+ (id)_reuseOrCreateInMemoryStorageForIdentifier:(id)arg1 error:(id *)arg2;
+ (id)_reuseOrCreateDiskBasedStorageForIdentifier:(id)arg1 error:(id *)arg2;
+ (id)_makeStorageWithIdentifier:(id)arg1 inMemory:(_Bool)arg2 error:(id *)arg3;
+ (id)_storageForIdentifier:(id)arg1 inMemory:(_Bool)arg2 error:(id *)arg3;
+ (void)_pruneOldFilesInDirectory:(id)arg1 sinceTimeInterval:(double)arg2;
+ (void)_pruneOldFeedCacheFiles;
+ (void)_clearEntireLayoutStorageDirectory;
+ (void)_ensureLayoutStorageDirectoryExists;
+ (id)_feedLayoutStorageDirectory;
+ (id)_cacheAccessQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *serialDBWritingQueue; // @synthesize serialDBWritingQueue=_serialDBWritingQueue;
@property(retain, nonatomic) FMDatabase *database; // @synthesize database=_database;
@property(retain, nonatomic) NSURL *layoutCacheDBPath; // @synthesize layoutCacheDBPath=_layoutCacheDBPath;
@property(nonatomic, getter=isChildStorage) _Bool childStorage; // @synthesize childStorage=_childStorage;
@property(retain, nonatomic) FRTFeedDataStorageHeadlineInput *input; // @synthesize input=_input;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic, getter=isInMemoryDatabase) _Bool inMemoryDatabase; // @synthesize inMemoryDatabase=_inMemoryDatabase;
- (void).cxx_destruct;
- (void)dumpQuery:(id)arg1;
- (id)_buildQuestionMarkBindingStringWithCount:(unsigned long long)arg1;
- (id)objectForKey:(id)arg1;
- (_Bool)setObject:(id)arg1 forKey:(id)arg2;
- (void)updateHighWatermarkForNewArticleCountWithCurrentHeadlineID:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setLastRefreshedFeed:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)lastRefreshedFeed;
- (id)registeredFonts;
- (void)registerFonts:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)fetchSavedScrollPositionBookmark:(id *)arg1;
- (_Bool)_saveScrollPositionBookmark:(id)arg1 error:(id *)arg2;
- (void)saveScrollPositionBookmark:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)feedLayoutStorageForFeedSettings:(id)arg1;
- (id)feedLayoutStorageForWidth:(long long)arg1 preferredContentSizeCategory:(id)arg2;
- (id)allHeadlineIDs;
- (id)firstBatchID;
- (long long)maximumHeadlineIndex;
- (long long)maximumBatchIndex;
- (long long)minimumBatchIndex;
- (long long)startingHeadlineIndexForBatchID:(id)arg1;
- (long long)batchIndexForBatchID:(id)arg1;
- (id)batchIDForBatchIndex:(long long)arg1;
- (id)_batchIDsContainingHeadlineIDs:(id)arg1;
- (id)batchIDContainingHeadlineID:(id)arg1;
- (long long)countOfHeadlinesBetweenStartingBatchIndex:(long long)arg1 endingBatchIndex:(long long)arg2;
- (long long)countOfHeadlinesInBatchID:(id)arg1;
- (id)headlineIDsForBatchID:(id)arg1;
- (id)filterOutHeadlinesThatAreAlreadyStored:(id)arg1;
- (id)headlineIDForIndex:(long long)arg1;
- (long long)indexOfHeadlineID:(id)arg1;
- (id)nextNonAdHeadlineIDsAfterHeadlineID:(id)arg1 count:(long long)arg2;
- (void)nonAdHeadlineIDsAroundHeadlineID:(id)arg1 count:(long long)arg2 callbackQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)adIdentifiersWithCount:(unsigned long long)arg1 positionedAfter:(_Bool)arg2 headlineID:(id)arg3;
- (id)nextAdIdentifiersWithCount:(unsigned long long)arg1 beforeHeadlineID:(id)arg2;
- (id)nextAdIdentifiersWithCount:(unsigned long long)arg1 afterHeadlineID:(id)arg2;
- (long long)batchIndexForNextAdAfter:(_Bool)arg1 batchIndex:(long long)arg2;
- (long long)batchIndexOfPreviousAdForBatchIndex:(long long)arg1;
- (long long)batchIndexOfNextAdForBatchIndex:(long long)arg1;
- (long long)countOfHeadlines;
- (id)addNewBatchOfHeadlines:(id)arg1 beforeBatchID:(id)arg2;
- (id)addNewBatchOfHeadlines:(id)arg1 afterBatchID:(id)arg2;
- (void)pruneDatabaseAfterHeadlineID:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)clearDisplayTablesCallbackQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setLastSeenContentSizeCategoryAsynchronously:(id)arg1;
- (id)lastSeenContentSizeCategory;
- (void)setLastSeenAccessibilityBoldTextEnabled:(_Bool)arg1;
- (_Bool)lastSeenAccessibilityBoldTextEnabled;
- (id)adBatchForID:(id)arg1;
- (id)adBatchIDForAdID:(id)arg1;
- (_Bool)insertAdBatchWithIdentifier:(id)arg1;
- (_Bool)insertAd:(id)arg1 withAdBatchID:(id)arg2;
- (id)blobResultOfQuery:(id)arg1;
- (long long)integerResultOfQuery:(id)arg1;
- (id)stringResultOfQuery:(id)arg1;
- (_Bool)performTransaction:(CDUnknownBlockType)arg1;
- (void)purgeDBMemoryCache;
- (void)triggerWALCheckpoint;
- (CDUnknownBlockType)runInTransaction:(CDUnknownBlockType)arg1 exclusive:(_Bool)arg2 setupError:(id *)arg3;
- (CDUnknownBlockType)runTransactionInChildDataStorage:(CDUnknownBlockType)arg1 exclusive:(_Bool)arg2 setupError:(id *)arg3;
- (_Bool)rollback;
- (_Bool)commit;
- (_Bool)beginExclusiveTransaction;
- (_Bool)beginTransaction;
- (_Bool)executeUpdate:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;
- (_Bool)executeUpdate:(id)arg1;
- (id)executeQuery:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2;
- (id)executeQuery:(id)arg1;
- (_Bool)_commonSetupError:(id *)arg1;
- (void)close;
- (void)truncateAllDataCallbackQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_truncateAllDataCompletion:(CDUnknownBlockType)arg1;
- (id)createChildStorage:(id *)arg1;
@property(readonly, nonatomic) _Bool hadError;
@property(readonly, nonatomic) NSError *lastError;
- (id)initWithSerialDBWritingQueue:(id)arg1;
- (id)init;
- (_Bool)_setLayoutCacheSchemaVersion:(unsigned int)arg1 error:(id *)arg2;
- (long long)_getLayoutCacheSchemaVersionError:(id *)arg1;
- (_Bool)_checkLayoutCacheDBSchemaError:(id *)arg1;
- (_Bool)_destroyLayoutDatabaseError:(id *)arg1;
- (_Bool)_openLayoutCacheDatabaseAtFile:(id)arg1 error:(id *)arg2;
- (_Bool)_childStorageOpenLayoutCacheDatabaseAtFile:(id)arg1 error:(id *)arg2;

@end