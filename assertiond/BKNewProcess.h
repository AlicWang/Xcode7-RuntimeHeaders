//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//


@interface BKNewProcess : NSObject <BKProcessAssertionDelegate>
{
    struct BKProcessTimes _times;
    double _timedAssertionPermittedDuration;
    double _timedAssertionReferenceTime;
    _Bool _timedAssertionDeadlineActive;
    double _allowIdleSleepReferenceTime;
    double _suspendedUntilUnlockReferenceTime;
    NSObject<OS_dispatch_source> *_backgroundPermissionCheckTimer;
    NSObject<OS_dispatch_source> *_backgroundPermissionExpirationWarningTimer;
    NSObject<OS_dispatch_source> *_taskCompletionAllowIdleSleepTimer;
    NSMutableSet *_assertions;
    NSMutableSet *_limitlessAssertions;
    NSMutableSet *_watchdogAssertions;
    unsigned int _powerAssertionID;
    unsigned long long _priorityBandUserData;
    unsigned long long _lastPriorityBandUserData;
    _Bool _throttleSetForTheFirstTime;
    _Bool _uiThrottled;
    _Bool _cpuThrottled;
    _Bool _theSystemApp;
    _Bool _running;
    _Bool _systemApp;
    _Bool _workspaceLocked;
    _Bool _recordingAudio;
    _Bool _sideApp;
    _Bool _frozen;
    _Bool _nowPlayingWithAudio;
    _Bool _receivingPacketsFromAccessory;
    _Bool _usesSocketMonitoring;
    _Bool _supportsBackgroundNetworkAuthentication;
    _Bool _supportsBackgroundContentFetching;
    _Bool _supportsUnboundedTaskCompletion;
    _Bool _taskSuspended;
    _Bool _viewService;
    _Bool _hasWatchdogAssertionsOut;
    _Bool _hasViewServiceBeenSuspended;
    _Bool _assertionsWantForegroundResourcePriority;
    _Bool _eligibleForLoweredJetsamPriority;
    _Bool _shouldSuspendOnSleep;
    _Bool _rbmIgnore;
    _Bool _rbmEnabled;
    BKProcessInfoServerClient *_client;
    int _pid;
    int _hostpid;
    BSCFBundle *_bundle;
    int _visibility;
    NSNumber *_terminationReason;
    NSString *_activationReason;
    unsigned int _taskNamePort;
    BSMachSendRight *_taskPort;
    unsigned int _previousApplicationState;
    NSString *_appType;
    NSObject<OS_dispatch_queue> *_queue;
    int _currentPriorityBand;
    int _suspendedPriorityBand;
    int _backgroundPriorityBand;
    int _preferredBackgroundPriorityBand;
    int _unsuspendLimitCount;
    double _unsuspendLimitStart;
    struct memorystatus_memlimit_properties _initialMemlimit;
}

+ (unsigned long long)_bitForProcessAssertionReason:(unsigned int)arg1;
+ (void)hostwideUserElapsedCPUTime:(double *)arg1 systemElapsedCPUTime:(double *)arg2 idleElapsedCPUTime:(double *)arg3;
+ (int)defaultSuspendedLoweredPriorityBand;
+ (int)defaultSuspendedPriorityBand;
+ (int)defaultBackgroundLoweredPriorityBand;
+ (int)defaultBackgroundPriorityBand;
@property(nonatomic) struct memorystatus_memlimit_properties initialMemlimit; // @synthesize initialMemlimit=_initialMemlimit;
@property(nonatomic) _Bool rbmEnabled; // @synthesize rbmEnabled=_rbmEnabled;
@property(nonatomic) _Bool rbmIgnore; // @synthesize rbmIgnore=_rbmIgnore;
@property(nonatomic) int unsuspendLimitCount; // @synthesize unsuspendLimitCount=_unsuspendLimitCount;
@property(nonatomic) double unsuspendLimitStart; // @synthesize unsuspendLimitStart=_unsuspendLimitStart;
@property(nonatomic) _Bool shouldSuspendOnSleep; // @synthesize shouldSuspendOnSleep=_shouldSuspendOnSleep;
@property(nonatomic) _Bool eligibleForLoweredJetsamPriority; // @synthesize eligibleForLoweredJetsamPriority=_eligibleForLoweredJetsamPriority;
@property(nonatomic) _Bool assertionsWantForegroundResourcePriority; // @synthesize assertionsWantForegroundResourcePriority=_assertionsWantForegroundResourcePriority;
@property(nonatomic) int preferredBackgroundPriorityBand; // @synthesize preferredBackgroundPriorityBand=_preferredBackgroundPriorityBand;
@property(nonatomic) int backgroundPriorityBand; // @synthesize backgroundPriorityBand=_backgroundPriorityBand;
@property(nonatomic) int suspendedPriorityBand; // @synthesize suspendedPriorityBand=_suspendedPriorityBand;
@property(nonatomic) int currentPriorityBand; // @synthesize currentPriorityBand=_currentPriorityBand;
@property(nonatomic) _Bool hasViewServiceBeenSuspended; // @synthesize hasViewServiceBeenSuspended=_hasViewServiceBeenSuspended;
@property(nonatomic) _Bool hasWatchdogAssertionsOut; // @synthesize hasWatchdogAssertionsOut=_hasWatchdogAssertionsOut;
@property(nonatomic, getter=isViewService) _Bool viewService; // @synthesize viewService=_viewService;
@property(nonatomic, getter=isTaskSuspended) _Bool taskSuspended; // @synthesize taskSuspended=_taskSuspended;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) NSString *appType; // @synthesize appType=_appType;
@property(nonatomic) unsigned int previousApplicationState; // @synthesize previousApplicationState=_previousApplicationState;
@property(nonatomic) BSMachSendRight *taskPort; // @synthesize taskPort=_taskPort;
@property(nonatomic) unsigned int taskNamePort; // @synthesize taskNamePort=_taskNamePort;
@property(retain, nonatomic) NSString *activationReason; // @synthesize activationReason=_activationReason;
@property(retain, nonatomic) NSNumber *terminationReason; // @synthesize terminationReason=_terminationReason;
@property(nonatomic) _Bool supportsUnboundedTaskCompletion; // @synthesize supportsUnboundedTaskCompletion=_supportsUnboundedTaskCompletion;
@property(nonatomic) _Bool supportsBackgroundContentFetching; // @synthesize supportsBackgroundContentFetching=_supportsBackgroundContentFetching;
@property(nonatomic) _Bool supportsBackgroundNetworkAuthentication; // @synthesize supportsBackgroundNetworkAuthentication=_supportsBackgroundNetworkAuthentication;
@property(nonatomic) _Bool usesSocketMonitoring; // @synthesize usesSocketMonitoring=_usesSocketMonitoring;
@property(nonatomic, getter=isReceivingPacketsFromAccessory) _Bool receivingPacketsFromAccessory; // @synthesize receivingPacketsFromAccessory=_receivingPacketsFromAccessory;
@property(nonatomic, getter=isNowPlayingWithAudio) _Bool nowPlayingWithAudio; // @synthesize nowPlayingWithAudio=_nowPlayingWithAudio;
@property(nonatomic, getter=isFrozen) _Bool frozen; // @synthesize frozen=_frozen;
@property(nonatomic, getter=isSideApp) _Bool sideApp; // @synthesize sideApp=_sideApp;
@property(nonatomic, getter=isRecordingAudio) _Bool recordingAudio; // @synthesize recordingAudio=_recordingAudio;
@property(nonatomic, getter=isWorkspaceLocked) _Bool workspaceLocked; // @synthesize workspaceLocked=_workspaceLocked;
@property(nonatomic) int visibility; // @synthesize visibility=_visibility;
@property(nonatomic, getter=isSystemApp) _Bool systemApp; // @synthesize systemApp=_systemApp;
@property(nonatomic, getter=isRunning) _Bool running; // @synthesize running=_running;
@property(readonly, nonatomic, getter=isTheSystemApp) _Bool theSystemApp; // @synthesize theSystemApp=_theSystemApp;
@property(readonly, nonatomic) BSCFBundle *bundle; // @synthesize bundle=_bundle;
@property(nonatomic) int hostpid; // @synthesize hostpid=_hostpid;
@property(nonatomic) int pid; // @synthesize pid=_pid;
@property(retain, nonatomic) BKProcessInfoServerClient *client; // @synthesize client=_client;
- (id)processAssertionDelegateDescription:(id)arg1;
- (void)processAssertionResumed:(id)arg1;
- (void)processAssertionSuspended:(id)arg1;
- (void)processAssertionInvalidated:(id)arg1;
- (void)processAssertion:(id)arg1 preventSuspendOnSleepChanged:(_Bool)arg2;
- (void)processAssertion:(id)arg1 wantsForegroundResourcePriorityCountChange:(_Bool)arg2;
- (void)processAssertion:(id)arg1 preventIdleSleepChanged:(_Bool)arg2;
- (void)processAssertion:(id)arg1 preventCPUThrottleDownChanged:(_Bool)arg2;
- (void)processAssertion:(id)arg1 preventUIThrottleDownChanged:(_Bool)arg2;
- (void)processAssertion:(id)arg1 preventTaskSuspendChanged:(_Bool)arg2;
- (id)_crashReportCPUUsageInfo;
- (void)_forceCrashReportWithReason:(int)arg1 description:(id)arg2;
- (void)_watchdogTerminateWithReason:(int)arg1 format:(id)arg2;
- (void)removeWatchdogAssertion:(id)arg1;
- (void)addWatchdogAssertion:(id)arg1;
- (void)_checkWatchdogAssertionsCount;
- (void)_resumeIfSuspendedForSleep;
- (void)systemWillSleep;
- (void)_updateBackgroundPermissionCheckTimer;
- (void)_notifyOfExpirationWarning;
- (id)_setupOneShotTimer:(double)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_cancelTimers;
- (double)remainingAllowedAssertionDuration;
- (unsigned int)finishTaskAfterAssertionReason;
- (_Bool)hasAssertionForReason:(unsigned int)arg1;
- (_Bool)hasAssertions;
- (id)assertions;
- (void)removeLimitlessAssertion:(id)arg1;
- (void)addLimitlessAssertion:(id)arg1;
- (void)removeAssertion:(id)arg1;
- (void)addAssertion:(id)arg1;
- (void)_noteAssertionsAdded:(id)arg1 removed:(id)arg2;
- (void)_updateAssertionNeedsWithReason:(unsigned int)arg1;
- (unsigned int)_calculateAssertionStateWithPowerAssertionNames:(id *)arg1 priorityBandData:(unsigned long long *)arg2;
- (_Bool)_hasViewServiceAssertion;
- (_Bool)_setPriority:(int)arg1 ofResource:(int)arg2;
@property(readonly, nonatomic) _Bool taskCompletionShouldPreventIdleSleep;
- (void)_cancelTaskCompletionAllowIdleSleep;
- (void)_scheduleTaskCompletionAllowIdleSleep;
- (_Bool)_taskShutdownSockets:(int)arg1;
- (_Bool)_taskResumeForReason:(unsigned int)arg1;
- (_Bool)_taskSuspend;
- (_Bool)_resumeForReason:(unsigned int)arg1;
- (_Bool)_suspend;
- (void)_killWithSignal:(int)arg1;
- (void)markWatchdogCPUTimes;
- (double)execTime;
- (double)elapsedCPUTime;
- (_Bool)isBeingPtraced;
- (_Bool)_isBeingDebugged;
@property(readonly, nonatomic) _Bool isBeingDebugged;
@property(readonly, nonatomic) _Bool isExtension;
- (void)powerlogEvent:(int)arg1 withAssertion:(id)arg2;
- (void)_updateRole;
- (void)_updateRBM;
- (void)_updateSecondaryAppMemLimit;
- (void)_getInitialMemlimit;
- (void)incrementKillCount;
- (void)_updateHibernation;
- (void)_logVMStat:(struct vm_statistics64)arg1 VMStatAfter:(struct vm_statistics64)arg2;
- (void)_logPhysicalFootprint:(struct __CFString *)arg1;
- (void)_postStateChangedNotification;
- (void)_updatePriorityBand;
- (int)_currentPriorityBand;
- (int)_foregroundPriorityBand;
@property(readonly, nonatomic) _Bool isForeground;
@property(readonly, nonatomic) int lifeState;
@property(readonly, nonatomic) NSString *bundleIdentifier;
- (void)_initPriorityBand:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithClient:(id)arg1 pid:(int)arg2 hostPID:(int)arg3 bundlePath:(id)arg4 queue:(id)arg5;

@end