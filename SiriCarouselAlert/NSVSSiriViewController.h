//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//


@interface NSVSSiriViewController : UIViewController <AFAssistantUIService, AFSpeechDelegate, SUICFlamesViewDelegate, NSRSiriTestDelegate, NSVSSiriTranscriptViewControllerDelegate, NSVSSiriViewDelegate, PUICStatusBarAppContextViewDataSource, UINavigationControllerDelegate, NSVSViewControllerGlanceTranscriptItemDelegate>
{
    AFConnection *_siriConnection;
    float _currentMicPowerLevel;
    int _lastKnownConnectionState;
    NSVSSiriRequest *_lastSiriRequest;
    CDUnknownBlockType _continueDeferredRequest;
    NSMutableDictionary *_delayedActions;
    NSMutableArray *_cachedTriggerPhraseTokens;
    NSString *_cachedTriggerPhraseLocale;
    int _siriState;
    _Bool _transcriptWasResetForRequest;
    _Bool _isShowingBorealisTriggerPhrase;
    NSTimer *_showHelpTimer;
    NSTimer *_cancelPreheatTimer;
    UIGestureRecognizer *_testPickerGestureRecognizer;
    UIView *_testRunnerTapArea;
    id <NSRSiriTestController> _testRunner;
    PUICNavigationController *_testPickerNavigationController;
    NSMutableSet *_statusBarDataSourceObservers;
    NSString *_statusBarAppContextTitleText;
    _Bool _isAirplaneModeOn;
    NSNumber *_cachedManualEndpointingThreshold;
    id <NSVSSiriViewControllerDelegate> _delegate;
    NSString *_currentPPTTest;
    NSVSSiriTranscriptViewController *_rootTranscriptViewController;
    NSDictionary *_statusBarMetricsOptions;
}

@property(retain, nonatomic, getter=_statusBarMetricsOptions, setter=_setStatusBarMetricsOptions:) NSDictionary *statusBarMetricsOptions; // @synthesize statusBarMetricsOptions=_statusBarMetricsOptions;
@property(readonly, nonatomic, getter=_rootTranscriptViewController) NSVSSiriTranscriptViewController *rootTranscriptViewController; // @synthesize rootTranscriptViewController=_rootTranscriptViewController;
@property(retain, nonatomic) NSString *currentPPTTest; // @synthesize currentPPTTest=_currentPPTTest;
@property(nonatomic) __weak id <NSVSSiriViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)glanceDidRequestAppLaunchWithBundleID:(id)arg1 launchURL:(id)arg2;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (_Bool)isObservingStatusBarAppContextDataSource:(id)arg1;
- (void)removeStatusBarAppContextDataSourceObserver:(id)arg1;
- (void)addStatusBarAppContextDataSourceObserver:(id)arg1;
- (_Bool)statusBarAppContextActivityIndicatorVisible;
- (_Bool)statusBarAppContextNavUIBackButtonDisabled;
- (_Bool)statusBarAppContextShowNavUI;
- (id)statusBarAppContextBackgroundColor;
- (id)statusBarAppContextTitleAccessoryView;
- (float)statusBarAppContextTitleBaseLine;
- (id)statusBarAppContextTitleFont;
- (id)statusBarAppContextTitleColor;
- (id)statusBarAppContextTitleText;
- (void)_cancelPreheatCancellationTimer;
- (void)_playSuccessHapticIfBacklightIsOff;
- (id)_fakeSpeechTokenWithText:(id)arg1;
- (id)_speechTokensForTriggerPhrase;
- (_Bool)_speechEventCanEnterHoldToTalk:(int)arg1;
- (_Bool)_shouldStartRequestForSpeechEvent:(int)arg1;
- (void)_cancelSpeechRequestIfNeeded;
- (void)flamesViewTapped:(id)arg1;
- (void)dimOverlayTapped:(id)arg1;
- (_Bool)backlightIsOn:(id)arg1;
- (void)flamesViewAuraDidDisplay:(id)arg1;
- (float)audioLevelForFlamesView:(id)arg1;
- (void)assistantConnectionDidChangeAudioRecordingPower:(id)arg1;
- (void)assistantConnection:(id)arg1 speechRecognized:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecognizedPartialResult:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecognitionDidFail:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecordingDidFail:(id)arg2;
- (void)assistantConnectionSpeechRecordingDidCancel:(id)arg1;
- (void)assistantConnectionSpeechRecordingDidEnd:(id)arg1;
- (void)assistantConnection:(id)arg1 speechRecordingDidBeginOnAVRecordRoute:(id)arg2;
- (void)assistantConnectionSpeechRecordingWillBegin:(id)arg1;
- (void)_setFocusedDuetIdentifiers:(id)arg1;
- (void)_presentGlance:(id)arg1;
- (void)_handleShowGlanceCommand:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)_failureAddViewsForPunchOut:(id)arg1;
- (void)_handleAppPunchOutCommand:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)_openURL:(id)arg1;
- (void)_openApplicationWithBundleID:(id)arg1 URL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_handleSetURLDataCommand:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_handleInitiateStartSpeechRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)assistantConnection:(id)arg1 openApplicationWithBundleID:(id)arg2 URL:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)assistantConnection:(id)arg1 openURL:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)assistantConnectionInvalidateCurrentUserActivity:(id)arg1;
- (void)assistantConnection:(id)arg1 setUserActivtiyInfoAndMakeCurrent:(id)arg2 webpageURL:(id)arg3;
- (void)_handleAddViews:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)assistantConnectionDismissAssistant:(id)arg1;
- (void)assistantConnection:(id)arg1 receivedCommand:(id)arg2;
- (Class)_replyCommandClassForSiriCommandResult:(int)arg1;
- (void)assistantConnectionRequestFinished:(id)arg1;
- (void)_handleRequestError:(id)arg1;
- (void)assistantConnection:(id)arg1 requestFailedWithError:(id)arg2 requestClass:(id)arg3;
- (void)_finishPPTWithName:(id)arg1;
- (void)startScrollingTest:(id)arg1;
- (void)_sendDelayedActionsWithCompletion:(CDUnknownBlockType)arg1;
- (void)_handleDelayedActionCancel:(id)arg1;
- (void)_handleDelayedAction:(id)arg1;
- (void)_prepareViewForRequest;
- (void)_siriDidStartThinking;
- (void)_siriDidStartListening;
- (void)_siriWillStartListening;
- (void)_siriDidGoIdleWithSuccess:(_Bool)arg1;
- (void)_siriDidChangeToState:(int)arg1;
- (void)_transitionToConnectionState:(int)arg1;
- (_Bool)siriIsIdle;
- (void)continueSpeechRequest;
- (void)_startRequestForTestInput:(id)arg1;
- (void)_startSpeechRequestWithOptions:(id)arg1;
- (void)_startRequestForSpeechEvent:(int)arg1 context:(id)arg2;
- (void)_startRequestForSpeechEvent:(int)arg1 context:(id)arg2 testInput:(id)arg3;
- (_Bool)_hasStartedRequest;
- (void)_cancelShowHelpDialogTimer;
- (void)_showHelpDialogAfterDelayTimerFired;
- (void)_showHelpDialogIfNeeded;
- (void)_resetTranscriptIfNeededAnimated:(_Bool)arg1 shouldResetStreamingResults:(_Bool)arg2;
- (void)_presentDialog:(id)arg1;
- (void)_willPresentTranscriptItems:(id)arg1;
- (void)_presentAceView:(id)arg1 inTranscriptViewController:(id)arg2;
- (void)transcriptViewController:(id)arg1 didUpdateDuetIdentifiers:(id)arg2;
- (void)transcriptViewController:(id)arg1 didSelectAction:(id)arg2;
- (void)_prepareForTestEntry;
- (void)setTestConnectionState:(int)arg1;
- (void)presentTestEntryDialog:(id)arg1;
- (void)presentTestEntryAceObject:(id)arg1;
- (void)dismissTestPicker;
- (void)prepareTranscriptForTestInput;
- (void)siriDidLaunchApp;
- (void)backlightDidTurnOn;
- (void)recordRequestMetric:(id)arg1 withTimestamp:(double)arg2;
- (void)setAirplaneModeStatus:(_Bool)arg1;
- (void)_updateConnectionLockState;
- (void)endSession;
- (void)cancelConnection;
- (void)stopSpeech;
- (void)buttonReleasedAtTime:(unsigned long long)arg1;
- (void)_fetchManualEndpointingThreshold;
- (void)deactivate;
- (void)_refreshConnectionStateForAirplaneModeChange;
- (void)startRequestForTestInput:(id)arg1;
- (void)startRequestForSpeechEvent:(int)arg1 context:(id)arg2;
- (void)setApplicationContext:(id)arg1;
- (void)willSetApplicationContextWithRefId:(id)arg1;
- (void)clearContext;
- (void)_preheatWithStyle:(int)arg1;
- (void)preheatForVoiceTrigger;
- (void)preheat;
- (void)defrost;
- (void)_handleTestRunnerDoubleTap:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)_backButtonPressed:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (void)_sendGenericCommand:(id)arg1;
- (id)_siriConnection;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSVSSiriView *view; // @dynamic view;

@end